buildscript {
    // Buildscript is evaluated before everything else so we can't use getExtOrDefault
    def kotlin_version = rootProject.ext.has('kotlinVersion') ? rootProject.ext.get('kotlinVersion') : project.properties['IronSourceMediation_kotlinVersion']

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.0'

        // noinspection DifferentKotlinGradleVersion
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def getExtOrDefault(name) {
    return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties['IronSourceMediation_' + name]
}

def getExtOrIntegerDefault(name) {
    return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties['IronSourceMediation_' + name]).toInteger()
}

def supportsNamespace() {
    def parsed = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
    def major = parsed[0].toInteger()
    def minor = parsed[1].toInteger()

    // Namespace support was added in 7.3.0
    if (major == 7 && minor >= 3) {
        return true
    }

    return major >= 8
}

def reactProperties = new Properties()
file("$reactNativeRootDir/ReactAndroid/gradle.properties").withInputStream { reactProperties.load(it) }

def REACT_NATIVE_VERSION = reactProperties.getProperty("VERSION_NAME")
def REACT_NATIVE_MINOR_VERSION = REACT_NATIVE_VERSION.startsWith("0.0.0-") ? 1000 : REACT_NATIVE_VERSION.split("\\.")[1].toInteger()

android {
    if (supportsNamespace()) {
        namespace "com.ironsource.react_native_mediation"
    } else {
        sourceSets {
            main {
                manifest.srcFile "src/main/AndroidManifestDeprecated.xml"
            }
        }
    }
    compileSdkVersion getExtOrIntegerDefault('compileSdkVersion')
    buildToolsVersion getExtOrDefault('buildToolsVersion')
    defaultConfig {
        minSdkVersion getExtOrIntegerDefault('minSdkVersion')
        targetSdkVersion getExtOrIntegerDefault('targetSdkVersion')
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
    lintOptions {
        disable 'GradleCompatible'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def kotlin_version = getExtOrDefault('kotlinVersion')

rootProject.allprojects {
    repositories {
        mavenCentral()
        google()
        maven {
            url 'https://android-sdk.is.com/'
        }
    }
}

dependencies {
    // noinspection GradleDynamicVersion
    if (REACT_NATIVE_MINOR_VERSION >= 71) {
        implementation 'com.facebook.react:react-android:+'
    } else {
        // noinspection GradleDynamicVersion
        implementation "com.facebook.react:react-native:+" // From node_modules
    }
    
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    // ironSource
    implementation 'com.ironsource.sdk:mediationsdk:7.9.0'
}
